(()=>{"use strict";const e={API_KEY:{key:"api_key",defaultValue:""},APP_ID:{key:"appId",defaultValue:""},POWER_ON:{key:"power_on",defaultValue:!0},TIKTOK:{key:"tiktok",defaultValue:{delayClick:500,delaySwipe:15,loop:!0,isActive:!0}},FUNCAPTCHA:{key:"funcaptcha",defaultValue:{delayClick:100,loop:!0,isActive:!0,maxImageCaptcha:25}},ZALO:{key:"zalo",defaultValue:{delayClick:100,loop:!0,isActive:!0}},SHOPEE:{key:"shopee",defaultValue:{delaySwipe:15,loop:!0,isActive:!0}},RECAPTCHAV2:{key:"reCaptchav2",defaultValue:{delayClick:500,loop:!0,isActive:!0,useToken:!1}},AMZN:{key:"amzn",defaultValue:{delayClick:100,loop:!0,isActive:!0}},GEETEST:{key:"geetest",defaultValue:{delayClick:500,delaySwipe:15,loop:!0,isActive:!0}},SLIDE_ALL:{key:"slide_all",defaultValue:{delaySwipe:15,loop:!0,isActive:!0}},HCAPTCHA:{key:"hcaptcha",defaultValue:{delayClick:500,delaySwipe:15,loop:!0,isActive:!0}},CLOUDFLARE:{key:"cloudflare",defaultValue:{delayClick:2e3,isActive:!0}}};async function t(e,t,a){const o="undefined"!=typeof browser?browser.runtime:chrome.runtime;try{return await new Promise(((n,s)=>{o.sendMessage({source:e,type:t,data:a},(e=>{o.lastError?s(new Error(`Error sending message: ${o.lastError.message}`)):n(e)}))}))}catch(e){throw console.error(`[messageHelpers] Error in sending message: ${e.message}`),e}}const a=async(e,t)=>{const a="undefined"!=typeof browser?browser.storage.local:chrome.storage.local,o="undefined"!=typeof browser?browser.runtime:chrome.runtime;try{const n=await a.get([e]);if(o.lastError)throw new Error(`Error retrieving ${e}: ${o.lastError.message}`);return null!=n[e]?n[e]:t}catch(t){throw console.error(`[storageHelpers] Error retrieving ${e}:`,t),t}};Promise.resolve();async function o(e){return new Promise((t=>setTimeout(t,e)))}function n(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"success",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=document.getElementById("captcha-message");o||(o=document.createElement("div"),o.id="captcha-message",o.style.zIndex="99999999",o.style.padding="3px 3px",o.style.borderRadius="3px",o.style.boxShadow="0 2px 10px rgba(0, 0, 0, 0.2)",o.style.fontSize="10px",o.style.fontWeight="600",o.style.fontFamily="Arial, sans-serif",o.style.textAlign="center",o.style.whiteSpace="nowrap",o.style.color="white",o.style.top="1px",a&&a.parentElement?(o.style.position="absolute",o.style.left="2px",a.parentElement.appendChild(o)):(o.style.position="fixed",o.style.left="1px",document.body.appendChild(o)));const n={success:"linear-gradient(90deg, #6a11cb,rgb(191, 37, 252))",error:"linear-gradient(90deg, #ff416c, #ff4b2b)",warning:"linear-gradient(90deg, #ff9a44, #fc6076)",info:"linear-gradient(90deg, #17a2b8, #138496)"};o.innerText="[OMOcaptcha.com] "+e,o.style.background=n[t]||n.success,o.style.display="block"}let s,c,i,l,r;async function h(){s=await a(e.POWER_ON.key,e.POWER_ON.defaultValue),c=await a(e.API_KEY.key,e.API_KEY.defaultValue);const t=await a(e.HCAPTCHA.key,e.HCAPTCHA.defaultValue);i=t.delayClick||500,l=t.loop||!1,r=t.isActive||!1}console.log("Run file hcaptcha...");const d={observer:null,async solve(){if(await h(),s&&r&&c&&"YOUR_CLIEN_KEY"!==c){console.log("[hcaptcha] run checkboxSolver..."),await o(2e3);try{const e=document.querySelector("#checkbox");if(!e)return void console.warn("Checkbox not found in Anchor iframe");(e=>{const t=e.getBoundingClientRect(),a=t.left+t.width/2,o=t.top+t.height/2;["mouseover","mouseenter","pointerover","pointerenter","mousemove","pointermove"].forEach((t=>{e.dispatchEvent(new MouseEvent(t,{bubbles:!0,cancelable:!0,view:window,clientX:a,clientY:o}))})),["pointerdown","mousedown","mouseup","click"].forEach((t=>{e.dispatchEvent(new MouseEvent(t,{bubbles:!0,cancelable:!0,view:window,clientX:a,clientY:o}))})),console.log("[hcaptcha] Đã click checkbox bằng MouseEvent"),window.parent.postMessage({type:"checkboxStateHcaptcha",state:!0},"*")})(e),this.observer=new MutationObserver((async t=>{for(const a of t)if("attributes"===a.type&&"aria-checked"===a.attributeName){const t="true"===e.getAttribute("aria-checked");window.parent.postMessage({type:"checkboxStateHcaptcha",state:t},"*")}})),this.observer.observe(e,{attributes:!0,attributeFilter:["aria-checked"]})}catch(e){console.warn("Cannot access window.parent due to cross-origin restrictions:",e)}}}};let u=!1;const g={observer:null,checkboxChecked:!1,firstImageBase64:"",reportManager:{resolvedTaskIds:[],addTaskId(e){this.resolvedTaskIds.push(e)},async sendReport(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(console.log("[hcaptcha] Đang check resolvedTaskIds",this.resolvedTaskIds),0===this.resolvedTaskIds.length)return;const a={taskIds:this.resolvedTaskIds,result:e};try{await t("HCAPTCHA","reportTask",a)}catch(e){console.error("[hcaptcha] Failed to send report:",e)}finally{this.resolvedTaskIds=[]}},resetTaskIds(){this.resolvedTaskIds=[]}},initMessageListener(){window.addEventListener("message",(e=>{if("checkboxStateHcaptcha"===e.data.type)this.checkboxChecked=e.data.state,console.log("[hcaptcha] checkboxChecked: ",this.checkboxChecked),this.checkboxChecked&&!l&&this.observer&&this.observer.disconnect()}))},async solve(){if(await h(),!s||!r||!c||"YOUR_CLIEN_KEY"===c)return;const e=await(t="#display-language > div",a=5e3,new Promise((e=>{const o=document.querySelector(t);if(o)return e(o);const n=new MutationObserver(((a,o)=>{const n=document.querySelector(t);n&&(o.disconnect(),e(n))}));n.observe(document.body,{childList:!0,subtree:!0}),setTimeout((()=>{n.disconnect(),e(null)}),a)})));var t,a;if(e){for(let t=0;t<10;t++){if("EN"===e.textContent.trim()){console.log("[hcaptcha] Ngôn ngữ đã là EN rồi");break}e.click(),await new Promise((e=>setTimeout(e,1500)));const t=document.querySelectorAll("#language-list .option span"),a=Array.from(t).find((e=>"English"===e.textContent.trim()));if(a){a.click(),console.log("[hcaptcha] Đã chọn ngôn ngữ EN.");break}console.error("[hcaptcha] Không tìm thấy tùy chọn ngôn ngữ EN."),await o(1e3)}try{n("Solving hcaptcha...","green");let e=0,t=0;for(;;)if(e>0||t>0?await o(500):await o(2e3),!u&&!this.checkboxChecked)try{this.findElement('.challenge-container canvas[role="img"]')?(e++,t=0,e>=3&&(await this.solveWithCanvas(),e=0)):this.findElement('.challenge-container [class="task-grid"]')?(t++,e=0,t>=3&&(await this.solveWithGrid(),t=0)):(e=0,t=0)}catch(e){console.error(e)}finally{u=!1}}catch(e){console.error("Error solving HCAPTCHA:",e),n(`Error solving HCAPTCHA: ${e.message}`,"red"),this.reportManager.resetTaskIds()}}else console.error("[hcaptcha] Không tìm thấy #display-language > div")},async solveWithCanvas(){if(!this.checkboxChecked)if(document.hidden)console.warn("[hcaptcha] Tab không hiển thị, dừng xử lý");else try{const e=document.querySelector(".challenge-container");await this.humanizeMouseMovement(e),await o(200+300*Math.random()),u=!0,n("Solve Canvas...","red"),await o(200);let a=await this.getStableCanvasBase64();if(!a)return console.error("[hcaptcha] Không lấy được ảnh canvas ổn định."),n("Cannot get stable canvas image","red"),void await this.refresh();console.log("[hcaptcha] This is stable base64Canvas",a);let s=null;for(let e=0;e<10&&(s=document.querySelector('[class="prompt-text"][style*="opacity: 1"]'),!(s&&s.textContent.trim().length>0));e++)await o(200);if(!s)return void await this.refresh();let c=s.textContent.trim();console.log("textQuestion",c);let i=[];const r=document.querySelectorAll('[class="bounding-box-example"] [class="example-image"] [class="image"]');for(const e of r){const a=window.getComputedStyle(e).backgroundImage.match(/url\(["']?(.*?)["']?\)/);if(a&&a[1]){const e=await t("HCAPTCHA","createImageBase64",{url:a[1]});e&&i.push(e)}}console.log("[hcaptcha] arrImage:",i);let h={type:"HcaptchaImageTask",anchors:i,queries:[a],question:c};if(this.checkboxChecked)return;const d=await this.createTask(h);if(!d)return console.log("[hcaptcha] taskId not found"),n("Cannot get taskId","red"),l?void await this.refresh():void 0;this.reportManager.addTaskId(d);const g=await this.getTaskResult(d,30);if(!g||!g.type)return console.log("[hcaptcha] Khong co result"),n("Cannot get result","red"),await this.reportManager.sendReport(!1),void(l&&await this.refresh());console.log("[hcaptcha] This is result ",g);let p=g.type;"click"===p?await this.clickCanvas(g.coords):"drag"===p&&await this.dragCanvas(g.box),await this.next()}catch(e){n("solveWithCanvas function failed","red"),await this.reportManager.sendReport(!1),await this.refresh()}},getCanvasRect(){const e=document.querySelector('canvas[role="img"]');return e?e.getBoundingClientRect().toJSON():null},async getStableCanvasBase64(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3,n=null,s=null,c=this.getCanvasRect();for(let i=0;i<e;i++){i>0&&await o(a);const l=await t("HCAPTCHA","getCanvasBase64_screenshot",{rectCanvas:c});if(!l.base64){console.error("[hcaptcha] Lỗi khi lấy base64 từ background:",l.error);continue}const r=l.base64;console.log("This is currentBase64",r),console.log("currentBase64 length",r.length);let h=6e4*window.devicePixelRatio*.45;if(r.length<h)console.log("[hcaptcha] Lỗi ảnh, kích thước quá nhỏ");else{if(r===n){s=r,console.log(`[hcaptcha] Ảnh canvas đã ổn định ở lần ${i}`);break}i===e-1&&n&&Math.abs(r.length-n.length)<300&&r.length>h&&(s=r,console.log("[hcaptcha] Ảnh canvas gần ổn định, chấp nhận ở lần cuối cùng.")),n=r}}return s},async solveWithGrid(){console.log("[hcaptcha] This is solveWithGrid");try{const e=document.querySelector(".challenge-container");let a;await this.humanizeMouseMovement(e),await o(200+300*Math.random()),u=!0,n("Solve Grid...","red"),await o(300);let s=[],c=!1;for(let e=0;e<15;e++){if(s=[],a=document.querySelectorAll('[class="task-grid"] [class="task"] [class="task-image"] [class="image"]'),a.length>8)for(const e of a){const a=window.getComputedStyle(e).backgroundImage.match(/url\(["']?(.*?)["']?\)/);if(a&&a[1]){const e=await t("HCAPTCHA","createImageBase64",{url:a[1]});e&&s.push(e)}}if(s.length>8){console.log(`[hcaptcha] Đã thu thập thành công ${s.length} ảnh base64 ở lần thử thứ ${e+1}.`),c=!0;break}console.log(`[hcaptcha] Lần thử ${e+1}/10: Thu thập không thành công (chỉ được ${s.length}/9 ảnh). Chờ và thử lại...`),await o(500)}if(!c)return console.error("[hcaptcha] Không thể thu thập đủ 9 ảnh base64 sau 10 lần thử. Đang làm mới..."),n("Failed to collect images, refreshing...","red"),void await this.refresh();console.log("[hcaptcha] This is arrImageGrid",s);let i=document.querySelector('[class="prompt-text"]>span');for(let e=0;e<10&&!(i&&i.textContent.length>0);e++)await o(500);if(!i)return void await this.refresh();let r=i.textContent;console.log("[hcaptcha] textQuestion",r);let h=[];const d=document.querySelectorAll(".challenge-prompt .example-wrapper .challenge-example .image .image");if(d.length>0)for(const e of d){const a=window.getComputedStyle(e).backgroundImage.match(/url\(["']?(.*?)["']?\)/);if(a&&a[1]){const e=await t("HCAPTCHA","createImageBase64",{url:a[1]});e&&h.push(e)}}console.log("[hcaptcha] This is arrImageAnchor",h);let g={type:"HcaptchaImageTask",anchors:h,queries:s,question:r};if(this.checkboxChecked)return;const p=await this.createTask(g);if(!p)return console.log("[hcaptcha] taskId not found"),n("Cannot get taskId","red"),l?void await this.refresh():void 0;this.reportManager.addTaskId(p);const m=await this.getTaskResult(p,30);if(!m||0===Object.keys(m).length)return console.log("[hcaptcha] Khong co result"),n("Cannot get result","red"),await this.reportManager.sendReport(!1),void(l&&await this.refresh());console.log("[hcaptcha] This is result ",m);const w=m.objects;for(let e=0;e<w.length;e++)await this.simulateElementClick(a[w[e]]),await o(250+150*Math.random());await this.next()}catch(e){n("solveWithGrid function failed","red"),await this.reportManager.sendReport(!1),await this.refresh()}},async refresh(){document.querySelector('body:not([aria-hidden="true"]) [class="refresh button"]').click(),await o(2e3)},async next(){let e=document.querySelector('[class="button-submit button"]'),t=e.textContent;if("Verify"!==t&&await o(500),e.click(),n("Clicked submit","red"),"Verify"===t)for(let e=0;e<10;e++){if(console.log("Vòng lặp ",e),this.findElement('[class="display-error"][style*="opacity: 1"]')){await this.reportManager.sendReport(!1),n("Solving failed","red"),await o(1500);break}if(console.log("checkboxChecked",this.checkboxChecked),this.checkboxChecked){console.log("[hcaptcha] Đã dừng sau khi giải xong."),n("Successfully solved captcha","green");break}n("Solving...","red"),await o(1e3)}await o(1e3)},findElement:e=>!!document.querySelector(e),async extractImageUrlFromStyle(e){try{const t=(await e.evaluate((e=>e.style.background))).match(/url\(["']?(.*?)["']?\)/);if(t)return t[1]}catch(e){console.warn(`⚠️ Lỗi khi trích xuất URL ảnh: ${e}`)}return null},async humanizeMouseMovement(e){if(!e)return;console.log("[hcaptcha] Simulating human-like mouse movement...");const t=e.getBoundingClientRect(),a=Math.floor(3+3*Math.random());for(let n=0;n<a;n++){const a=t.left+Math.random()*t.width,n=t.top+Math.random()*t.height;e.dispatchEvent(new MouseEvent("mousemove",{bubbles:!0,cancelable:!0,view:window,clientX:a,clientY:n,buttons:0})),await o(100+150*Math.random())}},async simulateElementClick(e){if(!e)return;const t=e.getBoundingClientRect(),a=t.left+t.width*(.3+.4*Math.random()),n=t.top+t.height*(.3+.4*Math.random()),s=["mouseover","mouseenter","pointerover","pointerenter","mousemove","pointermove"];for(const t of s)e.dispatchEvent(new MouseEvent(t,{bubbles:!0,cancelable:!0,view:window,clientX:a,clientY:n})),await o(15+20*Math.random());const c=["pointerdown","mousedown","mouseup","click"];for(const t of c)e.dispatchEvent(new MouseEvent(t,{bubbles:!0,cancelable:!0,view:window,clientX:a,clientY:n})),await o(25+30*Math.random());console.log("[hcaptcha] Simulated a human-like click on an element.")},async clickCanvas(e){console.log("[hcaptcha] This is clickCanvas");let t=document.querySelector('canvas[role="img"]');for(let a=0;a<e.length;a++){a>0&&await o(350);const[n,s]=e[a];console.log("x",n),console.log("y",s),await this.simulateClick(t,n,s)}},async simulateClick(e,t,a){if(console.log("[hcaptcha] This is simulateClick"),!e)return;const n=e.getBoundingClientRect(),s=window.devicePixelRatio||1,c=n.left+t/s,i=n.top+a/s,l=["pointerover","pointerenter","pointermove","mouseover","mouseenter","mousemove","pointerdown","mousedown","pointerup","mouseup","click"];for(const t of l)e.dispatchEvent((r=t,new MouseEvent(r,{bubbles:!0,cancelable:!0,view:window,clientX:c,clientY:i,buttons:"mousedown"===r||"mousemove"===r?1:0}))),await o(30+30*Math.random());var r;console.log("[hcaptcha] Đã click")},async dragCanvas(e){let t=document.querySelector('canvas[role="img"]');for(let a=0;a<e.length;a++){a>0&&await o(400);const[s,c]=e[a].start;console.log("[xStart, yStart]",[s,c]);const[i,l]=e[a].end;console.log("[xEnd, yEnd]",[i,l]),n("Dragging...","red"),await this.simulateDrag(t,s,c,i,l)}},async simulateDrag(e,t,a,o,n){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:30;const c=e.getBoundingClientRect(),i=window.devicePixelRatio||1,l=c.left+t/i,r=c.top+a/i,h=c.left+o/i,d=c.top+n/i;e.dispatchEvent(new MouseEvent("mousemove",{bubbles:!0,clientX:l,clientY:r})),e.dispatchEvent(new MouseEvent("mousedown",{bubbles:!0,cancelable:!0,clientX:l,clientY:r,buttons:1}));for(let t=1;t<=s;t++){const a=l+(h-l)*t/s,o=r+(d-r)*t/s;e.dispatchEvent(new MouseEvent("mousemove",{bubbles:!0,cancelable:!0,clientX:a,clientY:o,buttons:1})),await new Promise((e=>setTimeout(e,8+15*Math.random())))}e.dispatchEvent(new MouseEvent("mouseup",{bubbles:!0,cancelable:!0,clientX:h,clientY:d}))},async createTask(e){const a=JSON.stringify({clientKey:c,task:e});try{const e=await t("HCAPTCHA","createTask",a);return e||(console.error("[HCAPTCHA] No taskId returned from createTask"),"")}catch(e){throw console.error("[HCAPTCHA] Failed to create task:",e),e}},async getTaskResult(e,a){const o=JSON.stringify({clientKey:c,taskId:e});try{const e=await t("HCAPTCHA","getTaskResult",{data:o,timeWait:a});return e?e.solution?e.solution:e.type?e:(console.error("[HCAPTCHA] Invalid API response: missing solution"),null):(console.error("[HCAPTCHA] No result returned from getTaskResult"),null)}catch(e){return console.error("[HCAPTCHA] Failed to get task result:",e),null}}};g.initMessageListener(),(async()=>{if(await h(),c&&"YOUR_CLIEN_KEY"!==c){if(r&&s){const e=window.location.href.includes("frame=checkbox"),t=window.location.href.includes("frame=challenge");console.log("isCheckbox",e),console.log("isChallenge",t),e&&!t?await d.solve():t&&await g.solve()}}else n("Invalid or missing API KEY","red")})()})();